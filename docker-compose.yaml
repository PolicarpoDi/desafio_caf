version: '3.8'

x-common: &common
  build:
    context: .
    dockerfile: Dockerfile
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./src:/opt/airflow/src
    - ./tests:/opt/airflow/tests
    - ./data:/opt/airflow/data
    - ./data/parquet:/opt/airflow/data/parquet
    - ./data/metadata:/opt/airflow/data/metadata
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__LOAD_EXAMPLES=false
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    - AIRFLOW__CORE__FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
    - AIRFLOW__WEBSERVER__SECRET_KEY=my_super_secret_key_123456
    - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
    - AIRFLOW__CORE__ENABLE_XCOM_PICKLING=true

services:
  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./init-schema.sql:/docker-entrypoint-initdb.d/init-schema.sql
    command: postgres -c 'max_connections=1000' -c 'listen_addresses=*'
    restart: always

  airflow-init:
    <<: *common
    command: /entrypoint.sh
    depends_on:
      postgres:
        condition: service_healthy

  airflow-webserver:
    <<: *common
    command: airflow webserver
    ports:
      - "8080:8080"
    depends_on:
      - airflow-init

  airflow-scheduler:
    <<: *common
    command: airflow scheduler
    depends_on:
      - airflow-init

volumes:
  postgres-db-volume:
